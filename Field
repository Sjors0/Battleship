
public class Field {
	private int[][] field;
	private int[] ships;

	public Field() {
		field = new int[10][10]; // makes new playing field consisting of 0's
		int[] ship = {5,4,4,3,3,3,2,2,2,2};
		ships = ship;
	}

	public String addShip(int xpos1, int ypos1, int xpos2, int ypos2) {
		if (xpos1 == xpos2 && ypos1 != ypos2) { //schepen kunnen alleen in een rechte lijn worden neergelgd
			int max = ypos2; 
			int min = ypos1;
			if (ypos1 > ypos2) { //kijk of ypos1 of ypos2 hoger is, noem min en max
				max = ypos1;
				min = ypos2;
			}
			int length = max-min;
			for(int i = min; i <= max; i++){
				if(field[xpos1][i]!=0){return "You can't place it on another boat!";} //kijk of er op de gwenste plaats een andere boot ligt
			}
			if(!isLeft(length)){return "No ships of that length left.";} //kijk of een schip van deze lengte nog neergezet kan worden
			else{removeShip(length+1);}
			
			for (int i = min; i <= max; i++) {
				field[xpos1][i] = 1; //zet schip neer, plek met schip heeft waarde 1
			}
			return "Ship begin (" + xpos1 + "," + ypos1 + "), ship end ("
					+ xpos2 + "," + ypos2 + ").";
		}
		if (ypos1 == ypos2 && xpos1 != xpos2) {
			int max = xpos2;
			int min = xpos1;
			if (xpos1 > xpos2) {
				max = xpos1;
				min = xpos2;
			}
			int length = max-min;
			for(int i = min; i <= max; i++){
				if(field[i][ypos1]!=0){return "You can't place it on another boat!";}
			}
			if(!isLeft(length+1)){return "No ships of that length left.";} //kijk of een schip van deze lengte nog neergezet kan worden
			else{removeShip(length+1);}
			for (int i = min; i <= max; i++) {
				field[i][ypos1] = 1;
			}
			return "Ship begin (" + xpos1 + "," + ypos1 + "), ship end ("
					+ xpos2 + "," + ypos2 + ").";
		}
		return "Invalid position";
	}

	public boolean isHit(int x, int y) {
		if (field[x][y] == 1 || field[x][y]==3) { //Kijkt of een schot op bepaalde plek boot raakt
			return true;
		} else
			return false;
	}
	public String shipsLeft(){
		String res = "<Ships left:(";
		for(int i = 0; i < ships.length; i++){
			if(ships[i]!=0){
			res = res + ships[i] + ", "; //geeft aan hoeveel boten van welke lengte nog over zijn
		}
		}
		return res + ")>";
	}
	public boolean isLeft(int r){
		if( r<2 || r > 5){return false;} //als het niet tussen2 en 5 zit sowieso niet meer
		for(int i = 0; i < 10; i++){
			if(ships[i]==r){ //kijkt in ships of er nog een schip met lengte r in zit
			return true;}
		}
		return false;
	}
	
	public String getField(){
		String res = "";
		for(int i = 0; i < 10; i++){
			for(int j = 0; j < 10; j++){
				res = res + field[j][i] + " ";
			}
			res = res + "\r"; 
		}
		return res;
	}
	public void removeShip(int r){
		int m=-1;
		for(int i = 0; i < 10; i++){
			if(ships[i]==r){
				m=i;
			}
		}
		if(m!=-1){
		ships[m]=0;
		}
	}
	public String shoot(int x,int y){
		if(field[x][y]==2){
			return "Already shot here.";
		}
		if(isHit(x, y)){
			field[x][y]=2;
			return "Hit at ("+x+", "+y+ ").";
		}
		else{field[x][y] = 3;
			return "Miss at ("+x+", "+y+").";
		}
	}
}
